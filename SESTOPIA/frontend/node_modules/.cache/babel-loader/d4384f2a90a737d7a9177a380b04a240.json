{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses\\\\SOEN6011\\\\project\\\\NodeMysqlCrudApp\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from './Components/Modals/Modal';\nimport DataTable from './Components/Tables/DataTable';\nimport { CSVLink } from \"react-csv\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.addItemToState = item => {\n      this.setState(prevState => ({\n        items: [...prevState.items, item]\n      }));\n    };\n\n    this.updateState = item => {\n      const itemIndex = this.state.items.findIndex(data => data.id === item.id);\n      const newArray = [// destructure all items from beginning to the indexed item\n      ...this.state.items.slice(0, itemIndex), // add the updated item to the array\n      item, // add the rest of the items to the array from the index after the replaced item\n      ...this.state.items.slice(itemIndex + 1)];\n      this.setState({\n        items: newArray\n      });\n    };\n\n    this.deleteItemFromState = id => {\n      const updatedItems = this.state.items.filter(item => item.id !== id);\n      this.setState({\n        items: updatedItems\n      });\n    };\n  }\n\n  getItems() {\n    fetch('http://localhost:6011/api/v1/tools').then(response => response.json()).then(items => this.setState({\n      items\n    })).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"CRUD Database\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      items: this.state.items,\n      updateState: this.updateState,\n      deleteItemFromState: this.deleteItemFromState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: \"db.csv\",\n      color: \"primary\",\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      className: \"btn btn-primary\",\n      data: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Download CSV\"), /*#__PURE__*/React.createElement(ModalForm, {\n      buttonLabel: \"Add Item\",\n      addItemToState: this.addItemToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Courses/SOEN6011/project/NodeMysqlCrudApp/frontend/src/App.js"],"names":["React","Component","Container","Row","Col","ModalForm","DataTable","CSVLink","App","state","items","addItemToState","item","setState","prevState","updateState","itemIndex","findIndex","data","id","newArray","slice","deleteItemFromState","updatedItems","filter","getItems","fetch","then","response","json","catch","err","console","log","componentDidMount","render","margin","float","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport ModalForm from './Components/Modals/Modal'\nimport DataTable from './Components/Tables/DataTable'\nimport { CSVLink } from \"react-csv\"\n\nclass App extends Component {\n  state = {\n    items: []\n  }\n\n  getItems(){\n    fetch('http://localhost:6011/api/v1/tools')\n      .then(response => response.json())\n      .then(items => this.setState({items}))\n      .catch(err => console.log(err))\n  }\n\n  addItemToState = (item) => {\n    this.setState(prevState => ({\n      items: [...prevState.items, item]\n    }))\n  }\n\n  updateState = (item) => {\n    const itemIndex = this.state.items.findIndex(data => data.id === item.id)\n    const newArray = [\n    // destructure all items from beginning to the indexed item\n      ...this.state.items.slice(0, itemIndex),\n    // add the updated item to the array\n      item,\n    // add the rest of the items to the array from the index after the replaced item\n      ...this.state.items.slice(itemIndex + 1)\n    ]\n    this.setState({ items: newArray })\n  }\n\n  deleteItemFromState = (id) => {\n    const updatedItems = this.state.items.filter(item => item.id !== id)\n    this.setState({ items: updatedItems })\n  }\n\n  componentDidMount(){\n    this.getItems()\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col>\n            <h1 style={{margin: \"20px 0\"}}>CRUD Database</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataTable items={this.state.items} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <CSVLink\n              filename={\"db.csv\"}\n              color=\"primary\"\n              style={{float: \"left\", marginRight: \"10px\"}}\n              className=\"btn btn-primary\"\n              data={this.state.items}>\n              Download CSV\n            </CSVLink>\n            <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState}/>\n          </Col>\n        </Row>\n        \n      </Container>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}